#include <iostream>
#include <vector>
#include <algorithm>
#include <cstdio>
#include <cstdlib>
#include <string>
#include <fstream>
#include <cmath>
#include <iomanip>
#include <set>
#include <map>
#include <queue>

using namespace std;

int main(int argc, char const* argv[]){

    int dx[] = {0,1,1,1,0,-1,-1,-1};
    int dy[] = {1,1,0,-1,-1,-1,0,1};
    
    int n, m;
    cin >> n >> m;
    
    int board[n][n];
    bool threaten[m][m];    //if threaten[i][j], then threaten[j][i]. threaten[i][i] = false always
    int queen[m][2];
    
    for(int i = 0; i < n; i++)
        for(int j = 0; j < n; j++)
            board[i][j] = -1;
    
    for(int i = 0; i < m; i++)
        for(int j = 0; j < m; j++)
            threaten[i][j] = false;
            
    for(unsigned int i = 0; i < m; i += 1){
        int r, c;
        cin >> r >> c;
        board[r][c] = i;
        queen[i][0] = r;
        queen[i][1] = c;
    }

    cout << "loaded" << endl;
    cout << "n : " << n << " m: " << m << endl;

    //detect threatened queens
    for(int z = 0; z < m; z++){
    
        cout << "queen: " << z << endl;
    
        for(int a = 0; a < 8; a++){
            
            cout << "accessing queen" << endl;
            
            int r = queen[z][0]; 
            int c = queen[z][1];
            
            while(r < n && c < n && r >= 0 && c >= 0){
                r += dx[a];
                c += dy[a];
                
                if(!(r < n && c < n && r >= 0 && c >= 0)) break;
                
                cout << "at: " << r << ", " << c << endl;
                
                if(board[r][c] != -1){
                    threaten[z][board[r][c]] = true;
                    
                    cout << "found" << endl;
                    
                    break;
                }
            }
        }
    }
    
    for(int z = 0; z < n; z++){
        for(int w = 0; w < n; w++){
            cout << board[z][w] << " ";
        }
        cout << endl;
    }
    
    for(int z = 0; z < m; z++){
        for(int w = 0; w < m; w++){
            cout << threaten[z][w] << " ";
        }
        cout << endl;
    }

    return 0;
}
